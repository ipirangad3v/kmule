.nh
.TH "GH-SEARCH-REPOS" "1" "Dec 2023" "GitHub CLI 2.40.0" "GitHub CLI manual"

.SH NAME
.PP
gh-search-repos - Search for repositories


.SH SYNOPSIS
.PP
\fBgh search repos [<query>] [flags]\fR


.SH DESCRIPTION
.PP
Search for repositories on GitHub.

.PP
The command supports constructing queries using the GitHub search syntax,
using the parameter and qualifier flags, or a combination of the two.

.PP
GitHub search syntax is documented at:

\[la]https://docs.github.com/search\-github/searching\-on\-github/searching\-for\-repositories\[ra]


.SH OPTIONS
.TP
\fB--archived\fR
Filter based on archive state

.TP
\fB--created\fR \fB<date>\fR
Filter based on created at date

.TP
\fB--followers\fR \fB<number>\fR
Filter based on number of followers

.TP
\fB--forks\fR \fB<number>\fR
Filter on number of forks

.TP
\fB--good-first-issues\fR \fB<number>\fR
Filter on number of issues with the 'good first issue' label

.TP
\fB--help-wanted-issues\fR \fB<number>\fR
Filter on number of issues with the 'help wanted' label

.TP
\fB--include-forks\fR \fB<string>\fR
Include forks in fetched repositories: {false|true|only}

.TP
\fB-q\fR, \fB--jq\fR \fB<expression>\fR
Filter JSON output using a jq expression

.TP
\fB--json\fR \fB<fields>\fR
Output JSON with the specified fields

.TP
\fB--language\fR \fB<string>\fR
Filter based on the coding language

.TP
\fB--license\fR \fB<strings>\fR
Filter based on license type

.TP
\fB-L\fR, \fB--limit\fR \fB<int>\fR
Maximum number of repositories to fetch

.TP
\fB--match\fR \fB<strings>\fR
Restrict search to specific field of repository: {name|description|readme}

.TP
\fB--number-topics\fR \fB<number>\fR
Filter on number of topics

.TP
\fB--order\fR \fB<string>\fR
Order of repositories returned, ignored unless '--sort' flag is specified: {asc|desc}

.TP
\fB--owner\fR \fB<strings>\fR
Filter on owner

.TP
\fB--size\fR \fB<string>\fR
Filter on a size range, in kilobytes

.TP
\fB--sort\fR \fB<string>\fR
Sort fetched repositories: {forks|help-wanted-issues|stars|updated}

.TP
\fB--stars\fR \fB<number>\fR
Filter on number of stars

.TP
\fB-t\fR, \fB--template\fR \fB<string>\fR
Format JSON output using a Go template; see "gh help formatting"

.TP
\fB--topic\fR \fB<strings>\fR
Filter on topic

.TP
\fB--updated\fR \fB<date>\fR
Filter on last updated at date

.TP
\fB--visibility\fR \fB<strings>\fR
Filter based on visibility: {public|private|internal}

.TP
\fB-w\fR, \fB--web\fR
Open the search query in the web browser


.SH EXAMPLE
.EX
# search repositories matching set of keywords "cli" and "shell"
$ gh search repos cli shell

# search repositories matching phrase "vim plugin"
$ gh search repos "vim plugin"

# search repositories public repos in the microsoft organization
$ gh search repos --owner=microsoft --visibility=public

# search repositories with a set of topics
$ gh search repos --topic=unix,terminal

# search repositories by coding language and number of good first issues
$ gh search repos --language=go --good-first-issues=">=10"

# search repositories without topic "linux"
$ gh search repos -- -topic:linux
 

.EE


.SH SEE ALSO
.PP
\fBgh-search(1)\fR
